{"version":3,"sources":["ng://angular-bigscreen/lib/document-ref.ts","ng://angular-bigscreen/lib/bigscreen.service.ts","ng://angular-bigscreen/lib/bigscreen.module.ts"],"names":["DocumentRef","Object","defineProperty","prototype","document","Injectable","args","providedIn","BigScreenService","documentRef","this","fnMap","keyboardAllowed","Element","val","ret","i","length","nativeDocument","toString","fn","request","elem","requestFullscreen","documentElement","test","navigator","userAgent","ALLOW_KEYBOARD_INPUT","exit","exitFullscreen","toggle","isFullscreen","onChange","callback","addEventListener","fullscreenchange","onError","fullscreenerror","Boolean","fullscreenElement","isEnabled","fullscreenEnabled","getElement","BigScreenModule","NgModule","declarations","imports","providers","exports"],"mappings":"gRAAA,IAAAA,EAAA,WAEA,SAAAA,YAQCC,OAAAC,eAAWF,EAAAG,UAAA,iBAAc,KAAzB,WACC,OAAOC,8DATRC,EAAAA,WAAUC,KAAA,CAAC,CACXC,WAAY,gHAHb,GCAAC,EAAA,WA8EC,SAAAA,EAAoBC,GAAAC,KAAAD,YAAAA,EArDZC,KAAAC,MAAoB,CAE3B,CACC,oBACA,iBACA,oBACA,oBACA,mBACA,mBAGD,CACC,0BACA,uBACA,0BACA,0BACA,yBACA,yBAID,CACC,0BACA,yBACA,iCACA,yBACA,yBACA,yBAID,CACC,uBACA,sBACA,uBACA,uBACA,sBACA,sBAGD,CACC,sBACA,mBACA,sBACA,sBACA,qBACA,sBAQDD,KAAKE,gBAAqC,oBAAZC,SAA2B,yBAA0BA,QAInF,QAFIC,EADEC,EAAW,GAGRC,EAAI,EAAGA,EAAIN,KAAKC,MAAMM,OAAQD,IAEtC,IADAF,EAAMJ,KAAKC,MAAMK,KACNF,EAAI,KAAMJ,KAAKD,YAAYS,eAAgB,CACrD,IAAKF,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAE3BD,EAAIL,KAAKC,MAAM,GAAGK,GAAGG,YAAcL,EAAIE,GAExCN,KAAKU,GAAKL,UAKNP,EAAAL,UAAAkB,QAAP,SAAeC,OACRD,EAAUX,KAAKU,GAAGG,kBAExBD,EAAOA,GAAQZ,KAAKD,YAAYS,eAAeM,gBAM3C,oBAAoBC,KAAKC,UAAUC,WACtCL,EAAKD,KAELC,EAAKD,GAASX,KAAKE,gBAAkB,QAAiBgB,qBAAuB,KAIxEpB,EAAAL,UAAA0B,KAAP,WACCnB,KAAKD,YAAYS,eAAeR,KAAKU,GAAGU,mBAGlCtB,EAAAL,UAAA4B,OAAP,SAAcT,GACTZ,KAAKsB,eACRtB,KAAKmB,OAELnB,KAAKW,QAAQC,IAIRd,EAAAL,UAAA8B,SAAP,SAAgBC,GACfxB,KAAKD,YAAYS,eAAeiB,iBAAiBzB,KAAKU,GAAGgB,iBAAkBF,GAAU,IAG/E1B,EAAAL,UAAAkC,QAAP,SAAeH,GACdxB,KAAKD,YAAYS,eAAeiB,iBAAiBzB,KAAKU,GAAGkB,gBAAiBJ,GAAU,IAG9E1B,EAAAL,UAAA6B,aAAP,WACC,OAAOO,QAAQ7B,KAAKD,YAAYS,eAAeR,KAAKU,GAAGoB,qBAGjDhC,EAAAL,UAAAsC,UAAP,WAEC,OAAOF,QAAQ7B,KAAKD,YAAYS,eAAeR,KAAKU,GAAGsB,qBAGjDlC,EAAAL,UAAAwC,WAAP,WACC,OAAOjC,KAAKD,YAAYS,eAAeR,KAAKU,GAAGoB,wCAzHhDnC,EAAAA,WAAUC,KAAA,CAAC,CACXC,WAAY,oDAnBJP,uHAFT,GCAA4C,EAAA,WAMA,SAAAA,KAaA,2BAbCC,EAAAA,SAAQvC,KAAA,CAAC,CACTwC,aAAc,GAEdC,QAAS,GAETC,UAAW,CACVhD,EACAQ,GAEDyC,QAAS,OAIVL,EAnBA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DocumentRef {\n\n\t/**\n\t * Access the native document.\n\t */\n\tpublic get nativeDocument(): Document {\n\t\treturn document;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DocumentRef } from './document-ref';\n\ninterface FullscreenControls {\n\n\trequestFullscreen: any;\n\n\texitFullscreen: any;\n\n\tfullscreenElement: any;\n\n\tfullscreenEnabled: string;\n\n\tfullscreenchange: string;\n\n\tfullscreenerror: string;\n\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BigScreenService {\n\n\tprivate fnMap: string[][] = [\n\t\t// Object keys\n\t\t[\n\t\t\t'requestFullscreen',\n\t\t\t'exitFullscreen',\n\t\t\t'fullscreenElement',\n\t\t\t'fullscreenEnabled',\n\t\t\t'fullscreenchange',\n\t\t\t'fullscreenerror'\n\t\t],\n\t\t// New WebKit\n\t\t[\n\t\t\t'webkitRequestFullscreen',\n\t\t\t'webkitExitFullscreen',\n\t\t\t'webkitFullscreenElement',\n\t\t\t'webkitFullscreenEnabled',\n\t\t\t'webkitfullscreenchange',\n\t\t\t'webkitfullscreenerror'\n\n\t\t],\n\t\t// Old WebKit (Safari 5.1)\n\t\t[\n\t\t\t'webkitRequestFullScreen',\n\t\t\t'webkitCancelFullScreen',\n\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t'webkitCancelFullScreen',\n\t\t\t'webkitfullscreenchange',\n\t\t\t'webkitfullscreenerror'\n\n\t\t],\n\t\t// Mozilla\n\t\t[\n\t\t\t'mozRequestFullScreen',\n\t\t\t'mozCancelFullScreen',\n\t\t\t'mozFullScreenElement',\n\t\t\t'mozFullScreenEnabled',\n\t\t\t'mozfullscreenchange',\n\t\t\t'mozfullscreenerror'\n\t\t],\n\t\t// MS\n\t\t[\n\t\t\t'msRequestFullscreen',\n\t\t\t'msExitFullscreen',\n\t\t\t'msFullscreenElement',\n\t\t\t'msFullscreenEnabled',\n\t\t\t'MSFullscreenChange',\n\t\t\t'MSFullscreenError'\n\t\t]\n\t];\n\n\tprivate fn: FullscreenControls;\n\tprivate keyboardAllowed: boolean;\n\n\tconstructor(private documentRef: DocumentRef) {\n\t\tthis.keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\t\tconst ret: any = {};\n\t\tlet val;\n\n\t\tfor (let i = 0; i < this.fnMap.length; i++) {\n\t\t\tval = this.fnMap[i];\n\t\t\tif (val && val[1] in this.documentRef.nativeDocument) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\t// Map everything to the first list of keys\n\t\t\t\t\tret[this.fnMap[0][i].toString()] = val[i];\n\t\t\t\t}\n\t\t\t\tthis.fn = ret;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic request(elem: any) {\n\t\tconst request = this.fn.requestFullscreen;\n\n\t\telem = elem || this.documentRef.nativeDocument.documentElement;\n\n\t\t// Work around Safari 5.1 bug: reports support for\n\t\t// keyboard in fullscreen even though it doesn't.\n\t\t// Browser sniffing, since the alternative with\n\t\t// setTimeout is even worse.\n\t\tif (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\n\t\t\telem[request]();\n\t\t} else {\n\t\t\telem[request](this.keyboardAllowed ? (Element as any).ALLOW_KEYBOARD_INPUT : {});\n\t\t}\n\t}\n\n\tpublic exit() {\n\t\tthis.documentRef.nativeDocument[this.fn.exitFullscreen]();\n\t}\n\n\tpublic toggle(elem: any) {\n\t\tif (this.isFullscreen()) {\n\t\t\tthis.exit();\n\t\t} else {\n\t\t\tthis.request(elem);\n\t\t}\n\t}\n\n\tpublic onChange(callback: any) {\n\t\tthis.documentRef.nativeDocument.addEventListener(this.fn.fullscreenchange, callback, false);\n\t}\n\n\tpublic onError(callback: any) {\n\t\tthis.documentRef.nativeDocument.addEventListener(this.fn.fullscreenerror, callback, false);\n\t}\n\n\tpublic isFullscreen() {\n\t\treturn Boolean(this.documentRef.nativeDocument[this.fn.fullscreenElement]);\n\t}\n\n\tpublic isEnabled() {\n\t\t// Coerce to boolean in case of old WebKit\n\t\treturn Boolean(this.documentRef.nativeDocument[this.fn.fullscreenEnabled]);\n\t}\n\n\tpublic getElement() {\n\t\treturn this.documentRef.nativeDocument[this.fn.fullscreenElement];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { DocumentRef } from './document-ref';\n\nimport { BigScreenService } from './bigscreen.service';\n\n@NgModule({\n\tdeclarations: [\n\t],\n\timports: [\n\t],\n\tproviders: [\n\t\tDocumentRef,\n\t\tBigScreenService\n\t],\n\texports: [\n\t]\n})\nexport class BigScreenModule {\n}\n"]}